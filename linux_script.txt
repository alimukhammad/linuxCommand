
create file
	cat>{filename}
		append cat>> {filename}
	touch{filename} (create empty file) 
		touch "filename" {1..100} (create multiple files at same time)

vi editor - make directories
	mkdir {directory name}
	mkdir -p "directory name"{1..3}
	touch /dir/dir/dir/{filename}{1..10}

copy a file
	cp -rvf <source> <destination>   (r-recursive v-verbal f-force)
	ex: mv dir1 dir2
	ex: mv dir1/file* dir2   (select all file in dir1 starting with file 
	
move a file
	mv <old dir> <new dir> (you need to be inside the old dir)

rename a directory/file
	mv <oldname> <newname>

remove be careful
	rm -rf * (r recursive & f force)

go back
	cd ..

make a directory
	mkdir <directory name>
	mkdir -p <dir1 dir2 dir3...> (make multiple dir using -p and dir names)

remove directory
	rmdir <directory name>
	rmdir -rf dir2  (to remove the direcory with files inside)


write the info verticaly long list type
	ls -l  (drops the horizontal print to vertical)
	ls -lr (reverses the info )
	ls -lt (shows the list in loged time)
	ls -lrt (shows the list in loged time but reversed)
	ls -lrat (long list reverst almost all except hidden files)
	ls -lart (long list reverst all including hidden files)

hidden file
	touch .file11 (dot in the front makes hidden)
	

-rw-r--r--. 1root root    3Feb 10 1756 file1

- file
d directory
b block
c character file
s socket
l soft link

r,w,x (read write execute)
rw-r--r-- > file permissions 

1/2 > number of hard link 

root > owner of the file
root > Group of the file

3 > Size of the file

3 Feb 10 17:56 > time of the file creation 

root > owner of the file 

new partition:-----

fdisk /dev/partition parent

	n
	p or e (primary or entended)
	4 (since 3 partitions are already created)
	.. recording

Partitions/Disk 
	> Physical Volume
		> Volume Group 
			> Logical Volume

lsblk
Create/Delete a partiotion
	fdisk /dev/nvme0n1
		n (new partition) d(deleting partition)
			...Last selection add storage size +5G 

Make the changes in the kernel Level use this comman
	kpartx -f /dev/nvme0n1



Extended partition can not be mounted bcuz it's 1K 

create tar ball
	tar -cvzf <file/dir name>
		(c=create)(v=verbos)(z=zip)(f=force)
Extract tar ball
	tar -xvzf <file/dir name>
		(x=extract)

pvcreate
lvcreate 

inside the partittion before same 
	add LVM by running "l" => 8e Linux LVM
	kpartx -f /dev/nvme0n1
	pvcreate /dev/nvme0n1p4
	vgcreate volume_group /dev/nvme0n1p4




Partition
fdisk /dev/<HDD name>
n---> new
p---> primary partiton
size----> +nG ( n can be your desired number in Gigs, according to size of your HDD )
t----> type of partition
which partition: 4
L: list the hex codes
LVM: 8e
Then
Linux changes to Linux LVM
w: write changes to the disk
kpartx -f------> update partition table at kernel level
pvcreate------> Physical volume creation--------> pvcreate /dev/nvme0n1p4( because you chose partition 4)
vgcreate------> volume group creation-----> vgcreate <vgname> <partition>
lvcreate-----> logical volume creation----> lvcreate -L <size +nG> <vgname>

lvextend
lvreduce
lvremove
mkfs.xfs -f /dev/<vgname>/<lvname>----> put file system type on to your disk

then mounting:

temporary/permanent

mount <lvpath> <mp path>

/etc/fstab



create an LV try extending and redusing it 



Put a file system (.xtf/exp3/exp4/exp5)
	mkfs.xfs -f /dev/nvme0n1p4 (mkfs=make_file_system)

-Temporary mounting 
	mount /dev/sda mpa
	Mount a partition
		mount <disk path> <mountpoint path>
		mount /dev/voleme_group/lvol0 mp (mp is a created dir)
		Check if mount is succesfull 
			mount|grep -w "/dev/nvme0n1p4"

-Permamanent mounting
	edit a file called /etc/fstab
	vi /etc/fstab (for security keep a copy of fstab, ex:cp /etc/fstab <copy path)
	add label/UUID> path> file type> default> ts> 0 0 
	mount <disk path> <mountpoint path>
	mount /dev/nvme0n1p4 /root/Desktop/mp
	mount|grep -w "/dev/nvme0n1p4"	
	-remove permanant mounting
		go into /etc/fstab & remove the entries 
		use "umount" to unmount 

Mounting Check
	df -h
	lsblk
	mount|grep -w "<diskname>"
	mount -l|grep -w "<diskname>"
	cat /proc/self/mounts|grep -w "<diskname>"
	cat /proc/mounts|grep -w "<diskname>"

mp = mount point
mount /dev/nvme0n1p4 mp

init 6 (restart)


Mounting creation steps below
you always have to give whole path after each command all commands below

Fdisk = create partition fdisk /dev/devicename
n = new partition
p = primary partition
size = +2G you can give size according to HDS
t = type of partition or where you wanna mount
L = list the HEX code
8e = mount thanks Linux change to LVM
w = is used to save
kpartx -f =update partition table at kernel level
pvcreate = Physical volume creation

vgcreate  = volume group creation & you also have to give vg a name anything you want

lvcreate - L = logical volume creation full command is lvcreate -L +2G name of VG

lvextend = is used to extend logical volume

mkfs.xfs -f  = is to put file system in lvm

mount = mount the logical volume full command is mount /dev/vg name / lvol0 mp

mount | grep -w “lvol0” = is used to mount

unmount = used to unmount the logical V full command is unmount /dev/vg name / lvol0 mp

lvremove = is used to remove logical volume
vgremove  = is used to removed volume group
pvremove =isused to removed physical volume


            How to delete partation below

fdisk  /dev/nvme0n1 device name
d = delete partition
kpartx -f =update partition table at kernel level full path is kpartx -f /dev/devicename









